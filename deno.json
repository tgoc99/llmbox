{
  "fmt": {
    "options": {
      "lineWidth": 100,
      "indentWidth": 2,
      "singleQuote": true
    }
  },
  "lint": {
    "rules": {
      "tags": ["recommended"]
    }
  },
  "tasks": {
    "deploy": "deno task deploy:webhook && deno task deploy:personifeed:all",
    "deploy:webhook": "/usr/local/bin/supabase functions deploy email-webhook --project-ref nopocimtfthppwssohty --no-verify-jwt",
    "deploy:personifeed:all": "deno task deploy:personifeed:signup && deno task deploy:personifeed:cron && deno task deploy:personifeed:reply",
    "deploy:personifeed:signup": "/usr/local/bin/supabase functions deploy personifeed-signup --project-ref nopocimtfthppwssohty --no-verify-jwt",
    "deploy:personifeed:cron": "/usr/local/bin/supabase functions deploy personifeed-cron --project-ref nopocimtfthppwssohty",
    "deploy:personifeed:reply": "/usr/local/bin/supabase functions deploy personifeed-reply --project-ref nopocimtfthppwssohty --no-verify-jwt",
    "db:push": "/usr/local/bin/supabase db push",
    "db:reset": "/usr/local/bin/supabase db reset",
    "test": "deno test --allow-all tests/ && deno test --allow-all supabase/functions/tests/",
    "test:unit": "deno test --allow-all tests/unit/",
    "test:personifeed": "deno test --allow-all supabase/functions/tests/personifeed-*.ts",
    "test:integration": "./scripts/load-env.sh deno test --allow-all tests/integration/",
    "test:integration:personifeed": "./scripts/load-env.sh deno test --allow-all tests/integration/personifeed-*.ts",
    "test:integration:openai": "./scripts/load-env.sh deno test --allow-all tests/integration/openai.test.ts",
    "test:integration:sendgrid": "./scripts/load-env.sh deno test --allow-all tests/integration/sendgrid.test.ts",
    "test:integration:e2e": "./scripts/load-env.sh deno test --allow-all tests/integration/end-to-end.test.ts",
    "test:integration:menu": "./scripts/run-integration-tests.sh",
    "test:watch": "deno test --allow-all --watch tests/",
    "test:coverage": "deno test --allow-all --coverage=coverage tests/",
    "lint": "deno lint",
    "lint:fix": "deno lint --fix",
    "fmt": "deno fmt",
    "fmt:check": "deno fmt --check",
    "check": "deno check supabase/functions/email-webhook/index.ts",
    "check:all": "deno task lint && deno task fmt:check && deno task check && deno task test",
    "logs": "/usr/local/bin/supabase functions logs email-webhook --project-ref nopocimtfthppwssohty",
    "logs:tail": "/usr/local/bin/supabase functions logs email-webhook --project-ref nopocimtfthppwssohty --follow",
    "logs:webhook": "/usr/local/bin/supabase functions logs email-webhook --project-ref nopocimtfthppwssohty",
    "logs:webhook:tail": "/usr/local/bin/supabase functions logs email-webhook --project-ref nopocimtfthppwssohty --follow",
    "logs:signup": "/usr/local/bin/supabase functions logs personifeed-signup --project-ref nopocimtfthppwssohty",
    "logs:signup:tail": "/usr/local/bin/supabase functions logs personifeed-signup --project-ref nopocimtfthppwssohty --follow",
    "logs:cron": "/usr/local/bin/supabase functions logs personifeed-cron --project-ref nopocimtfthppwssohty",
    "logs:cron:tail": "/usr/local/bin/supabase functions logs personifeed-cron --project-ref nopocimtfthppwssohty --follow",
    "logs:reply": "/usr/local/bin/supabase functions logs personifeed-reply --project-ref nopocimtfthppwssohty",
    "logs:reply:tail": "/usr/local/bin/supabase functions logs personifeed-reply --project-ref nopocimtfthppwssohty --follow",
    "test:webhook": "curl -i -X POST https://nopocimtfthppwssohty.supabase.co/functions/v1/email-webhook -H 'Content-Type: multipart/form-data' -F 'from=tgoc99@gmail.com' -F 'to=mail@llmbox.pro' -F 'subject=Test Email' -F 'text=Hello, can you help me with something?' -F 'headers={\"Message-ID\": \"<tgoc99@gmail.com>\"}'",
    "trigger:cron": "./scripts/load-env.sh bash -c 'curl -X POST https://nopocimtfthppwssohty.supabase.co/functions/v1/personifeed-cron -H \"Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY\" -H \"Content-Type: application/json\"'",
    "secrets:set:key": "/usr/local/bin/supabase secrets set --project-ref nopocimtfthppwssohty",
    "secrets:list": "/usr/local/bin/supabase secrets list --project-ref nopocimtfthppwssohty",
    "web:install": "cd web && npm install",
    "web:dev": "cd web && npm run dev",
    "web:build": "cd web && npm run build",
    "web:start": "cd web && npm run start",
    "web:lint": "cd web && npm run lint",
    "web:type-check": "cd web && npm run type-check",
    "help": "echo '\nðŸ“¦ Available tasks:\n\n  Setup:\n    deno task install:supabase Install Supabase CLI (macOS)\n    deno task web:install      Install web dependencies\n\n  Deployment:\n    deno task deploy                    Deploy llmbox function to Supabase\n    deno task deploy:personifeed:all    Deploy all personifeed functions\n    deno task deploy:personifeed:signup Deploy personifeed-signup function\n    deno task deploy:personifeed:cron   Deploy personifeed-cron function\n    deno task deploy:personifeed:reply  Deploy personifeed-reply function\n    deno task db:push                   Apply database migrations\n    deno task db:reset                  Reset database\n\n  Logs:\n    deno task logs                View email-webhook logs\n    deno task logs:tail           Tail email-webhook logs (live)\n    deno task logs:webhook        View email-webhook logs\n    deno task logs:webhook:tail   Tail email-webhook logs (live)\n    deno task logs:signup         View personifeed-signup logs\n    deno task logs:signup:tail    Tail personifeed-signup logs (live)\n    deno task logs:cron           View personifeed-cron logs\n    deno task logs:cron:tail      Tail personifeed-cron logs (live)\n    deno task logs:reply          View personifeed-reply logs\n    deno task logs:reply:tail     Tail personifeed-reply logs (live)\n\n  Testing:\n    deno task test                          Run all tests\n    deno task test:unit                     Run unit tests only\n    deno task test:personifeed              Run personifeed unit tests\n    deno task test:integration              Run all integration tests\n    deno task test:integration:personifeed  Run personifeed integration tests\n    deno task test:integration:openai       Run OpenAI integration tests\n    deno task test:integration:sendgrid     Run SendGrid integration tests\n    deno task test:integration:e2e          Run end-to-end integration tests\n    deno task test:integration:menu         Run integration tests (interactive)\n    deno task test:watch                    Run tests in watch mode\n    deno task test:coverage                 Run tests with coverage\n    deno task test:endpoint                 Test if endpoint is live\n    deno task test:webhook                  Test webhook with sample data\n    deno task trigger:cron                  Trigger personifeed-cron manually\n\n  Code Quality:\n    deno task lint            Lint code\n    deno task lint:fix        Lint and fix issues\n    deno task fmt             Format code\n    deno task fmt:check       Check formatting\n    deno task check           Type check code\n    deno task check:all       Run all checks + tests\n\n  Web App:\n    deno task web:install     Install web dependencies\n    deno task web:dev         Run web dev server\n    deno task web:build       Build web for production\n    deno task web:start       Start production web server\n    deno task web:lint        Lint web code\n    deno task web:type-check  Type check web code\n\n  Secrets:\n    deno task secrets:list    List all secrets\n    deno task secrets:set:key Set a secret (add KEY=value)\n\n  Help:\n    deno task help            Show this help\n'"
  }
}
